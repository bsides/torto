"function"!=typeof Array.prototype.reduce&&(Array.prototype.reduce=function(a){"use strict";if(null===this||"undefined"==typeof this)throw new TypeError("Array.prototype.reduce called on null or undefined");if("function"!=typeof a)throw new TypeError(a+" is not a function");var b,c=Object(this),d=c.length>>>0,e=0;if(arguments.length>=2)b=arguments[1];else{for(;d>e&&!e in c;)e++;if(e>=d)throw new TypeError("Reduce of empty array with no initial value");b=c[e++]}for(;d>e;e++)e in c&&(b=a(b,c[e],e,c));return b});var Torto=function(a){function b(b){return conf=a.extend({},k,b),h=new c(conf),{start:h.buildGUI,reset:h.resetGUI,check:h.check,echo:h.config.words}}function c(a){return this.config=a,this}function d(a){return a.split("").sort().join("")}function e(a){a.reduce(function(a,b){var c=d(a),e=d(b);if(c===e){var f=i[c];i[c]=f&&f.indexOf(b)<0?f+","+b:a+","+b}return b})}function f(a){var b=d(a);if(i.hasOwnProperty(b)){var c=i[b];return console.log(c.split(",").length+" anagrams has been found for the word:"+a),console.log("They are: "+c),!0}return console.log("No anagrams has been found for the word: "+a),!1}var g,h,i={},j="tropa,trapo,parto,topar,prato,potra,optar,porta,rapto,toar,apto,rota,rato,pato,apor,proa,tora,taro,paro,tapo,apto,roa,tao,ator,por,pao",k={words:j.split(",")};return c.prototype={buildGUI:function(){console.log("Interface is being built"),console.log("Interface building has been completed")},resetGUI:function(){console.log("Game has reseted")},check:function(a){console.log("Checking if the word exist in the array of anagrams");var b=conf.words;e(b),console.log(f(a)?"The word indeed exists":"The word doesn't exist in the database of anagrams")}},{getInstance:function(a){return g=b(a)}}}(jQuery);$(function(){game=Torto.getInstance(),game.start(),game.check("porta"),game.check("porto")});